corrplot(mat.cor , type = "upper", order = "hclust", tl.col = "black" , tl.srt =45)
}
library(corrplot)
Espece <- levels(datos$gender)
for (e in Espece) {
idx <- which(datos$gender==e)
mat.cor <- cor(x = datos[idx,6:8])
corrplot(mat.cor , type = "upper", order = "hclust", tl.col = "black" , tl.srt =45)
}
library(corrplot)
Espece <- levels(datos$gender)
for (e in Espece) {
idx <- which(datos$gender==e)
mat.cor <- cor(x = datos[idx,6:8])
corrplot(mat.cor , type = "upper", order = "hclust", tl.col = "black" , tl.srt =45)
}
library(ggplot2)
datos <-read.csv("StudentsPerformance.csv",dec = ",")
NomColonnes <- c("gender","race ethnicity","parental level of education","lunch","test preparation course","math score","reading score","writing score")
par(mfrow = c(2, 2))
for (i in 1:5) {
tab.eff <- table(datos[,i])
tab.freq <- prop.table(tab.eff)
barplot(tab.freq,xlab=NomColonnes[i],ylab="Fréquence")
}
par(mfrow = c(2, 2))
for (i in 6:8) {
hist(datos[,i], probability = TRUE, xlab = NomColonnes[i], ylab = "Densité de fréquence",
main = "")
dens <- density(datos[,i])
lines(dens, col = "red", lwd=2)
}
library(grid)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
A <- matrix(6:8, nrow = 2, ncol = 2, byrow = TRUE)
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
for (j in 1:5){
for (i in 6:8) {
boite <- ggplot(datos, aes(x = datos[,j] , y= datos[,i])) +
geom_boxplot() +
labs(x =NomColonnes[j], y = NomColonnes[i]) +
theme_minimal ()
pos <- which(A==i, arr.ind = TRUE)
print(boite)
}}
library(GGally)
for (i in 1:5) {
ggpairs(datos, columns = 6:8, ggplot2::aes(colour=datos[i]))
}
library(corrplot)
Espece <- levels(datos$gender)
for (e in Espece) {
idx <- which(datos$gender==e)
mat.cor <- cor(x = datos[idx,6:8])
corrplot(mat.cor , type = "upper", order = "hclust", tl.col = "black" , tl.srt =45)
}
library(grid)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
A <- matrix(6:8, nrow = 3, ncol = 2, byrow = TRUE)
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
for (j in 1:5){
for (i in 6:8) {
boite <- ggplot(datos, aes(x = datos[,j] , y= datos[,i])) +
geom_boxplot() +
labs(x =NomColonnes[j], y = NomColonnes[i]) +
theme_minimal ()
pos <- which(A==i, arr.ind = TRUE)
print(boite)
}}
library(grid)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
A <- matrix(6:8, nrow = 3, ncol = 3, byrow = TRUE)
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
for (j in 1:5){
for (i in 6:8) {
boite <- ggplot(datos, aes(x = datos[,j] , y= datos[,i])) +
geom_boxplot() +
labs(x =NomColonnes[j], y = NomColonnes[i]) +
theme_minimal ()
pos <- which(A==i, arr.ind = TRUE)
print(boite)
}}
library(GGally)
for (i in 1:5) {
ggpairs(datos, columns = 6:8, ggplot2::aes(colour=datos[i]))
}
library(GGally)
for (i in 1:5) {
ggpairs(datos, columns = 6:8, ggplot2::aes(colour=datos[i]))
}
library(GGally)
for (i in 1:5) {
ggpairs(datos, columns = 6:8, ggplot2::aes(colour=datos[i]))
}
library(GGally)
for (i in 1:5) {
ggpairs(datos, columns = 6:8, ggplot2::aes(colour=datos[i]))
}
library(corrplot)
Espece <- levels(datos$gender)
for (e in Espece) {
idx <- which(datos$gender==e)
mat.cor <- cor(x = datos[idx,6:8])
corrplot(mat.cor , type = "upper", order = "hclust", tl.col = "black" , tl.srt =45)
}
library(corrplot)
Espece <- levels(datos$gender)
for (e in Espece) {
idx <- which(datos$gender==e)
mat.cor <- cor(x = datos[idx,6:8])
corrplot(mat.cor , type = "upper", order = "hclust", tl.col = "black" , tl.srt =45)
}
library(grid)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
A <- matrix(6:8, nrow = 2, ncol = 2, byrow = TRUE)
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
for (i in 6:8) {
boite <- ggplot(datos, aes(x = datos[,j] , y= datos$gender)) +
geom_boxplot() +
labs(x =NomColonnes[j], y = NomColonnes[i]) +
theme_minimal ()
pos <- which(A==i, arr.ind = TRUE)
print(boite,, vp = vplayout(pos[1,1],pos[1,2]))
}
library(grid)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
A <- matrix(6:8, nrow = 2, ncol = 2, byrow = TRUE)
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
for (i in 6:8) {
boite <- ggplot(datos, aes(x = datos[,j] , y= gender)) +
geom_boxplot() +
labs(x =NomColonnes[j], y = NomColonnes[i]) +
theme_minimal ()
pos <- which(A==i, arr.ind = TRUE)
print(boite,, vp = vplayout(pos[1,1],pos[1,2]))
}
library(grid)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
A <- matrix(6:8, nrow = 1, ncol = 3, byrow = TRUE)
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
for (i in 6:8) {
boite <- ggplot(datos, aes(x = datos[,j] , y= gender)) +
geom_boxplot() +
labs(x =NomColonnes[j], y = NomColonnes[i]) +
theme_minimal ()
pos <- which(A==i, arr.ind = TRUE)
print(boite,, vp = vplayout(pos[1,1],pos[1,2]))
}
library(grid)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
A <- matrix(6:8, nrow = 1, ncol = 1, byrow = TRUE)
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
for (i in 6:8) {
boite <- ggplot(datos, aes(x = datos[,j] , y= gender)) +
geom_boxplot() +
labs(x =NomColonnes[j], y = NomColonnes[i]) +
theme_minimal ()
pos <- which(A==i, arr.ind = TRUE)
print(boite,, vp = vplayout(pos[1,1],pos[1,2]))
}
library(grid)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
A <- matrix(6:8, nrow = 1, ncol = 3, byrow = TRUE)
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
for (i in 6:8) {
boite <- ggplot(datos, aes(x = datos[,j] , y= gender)) +
geom_boxplot() +
labs(x =NomColonnes[j], y = NomColonnes[i]) +
theme_minimal ()
pos <- which(A==i, arr.ind = TRUE)
print(boite,, vp = vplayout(pos[1,1],pos[1,2]))
}
library(grid)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
A <- matrix(6:8, nrow = 1, ncol = 3, byrow = TRUE)
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
for (i in 6:8) {
boite <- ggplot(datos, aes(x = datos[,j] , y= gender)) +
geom_boxplot() +
labs(x =NomColonnes[j], y = NomColonnes[i]) +
theme_minimal ()
pos <- which(A==i, arr.ind = TRUE)
print(boite,, vp = vplayout(pos[1,1],pos[1,3]))
}
library(grid)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
A <- matrix(6:8, nrow = 1, ncol = 3, byrow = TRUE)
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
for (i in 6:8) {
boite <- ggplot(datos, aes(x = datos[,j] , y= gender)) +
geom_boxplot() +
labs(x =NomColonnes[j], y = NomColonnes[i]) +
theme_minimal ()
pos <- which(A==i, arr.ind = TRUE)
print(boite,, vp = vplayout(pos[1,2],pos[1,2]))
}
library(grid)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
A <- matrix(6:8, nrow = 1, ncol = 3, byrow = TRUE)
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
for (i in 6:8) {
boite <- ggplot(datos, aes(x = datos[,j] , y= gender)) +
geom_boxplot() +
labs(x =NomColonnes[j], y = NomColonnes[i]) +
theme_minimal ()
pos <- which(A==i, arr.ind = TRUE)
print(boite,, vp = vplayout(pos[1,1],pos[1,3]))
}
library(grid)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
A <- matrix(6:8, nrow = 1, ncol = , byrow = TRUE)
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
for (i in 6:8) {
boite <- ggplot(datos, aes(x = datos[,j] , y= gender)) +
geom_boxplot() +
labs(x =NomColonnes[j], y = NomColonnes[i]) +
theme_minimal ()
pos <- which(A==i, arr.ind = TRUE)
print(boite, vp = vplayout(pos[1,1],pos[1,3]))
}
library(grid)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
A <- matrix(6:8, nrow = 1, ncol = , byrow = TRUE)
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
for (i in 6:8) {
boite <- ggplot(datos, aes(x = datos[,j] , y= gender)) +
geom_boxplot() +
labs(x ="gender", y = NomColonnes[i]) +
theme_minimal ()
pos <- which(A==i, arr.ind = TRUE)
print(boite, vp = vplayout(pos[1,1],pos[1,3]))
}
library(grid)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
A <- matrix(6:8, nrow = 1, ncol =2 , byrow = TRUE)
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
for (i in 6:8) {
boite <- ggplot(datos, aes(x = datos[,j] , y= gender)) +
geom_boxplot() +
labs(x ="gender", y = NomColonnes[i]) +
theme_minimal ()
pos <- which(A==i, arr.ind = TRUE)
print(boite, vp = vplayout(pos[1,1],pos[1,3]))
}
library(grid)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
A <- matrix(6:8, nrow = 1, ncol =2 , byrow = TRUE)
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
for (i in 6:8) {
boite <- ggplot(datos, aes(x = datos[,j] , y= gender)) +
geom_boxplot() +
labs(x ="gender", y = NomColonnes[i]) +
theme_minimal ()
pos <- which(A==i, arr.ind = TRUE)
print(boite, vp = vplayout(pos[1,1],pos[1,2]))
}
library(grid)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
A <- matrix(6:8, nrow = 1, ncol =3 , byrow = TRUE)
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
for (i in 6:8) {
boite <- ggplot(datos, aes(x = datos[,j] , y= gender)) +
geom_boxplot() +
labs(x ="gender", y = NomColonnes[i]) +
theme_minimal ()
pos <- which(A==i, arr.ind = TRUE)
print(boite, vp = vplayout(pos[1,1],pos[1,2]))
}
library(grid)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
A <- matrix(6:8, nrow = 1, ncol =3 , byrow = TRUE)
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
for (i in 6:8) {
boite <- ggplot(datos, aes(x = datos[,j] , y= gender)) +
geom_boxplot() +
labs(x ="gender", y = NomColonnes[i]) +
theme_minimal ()
pos <- which(A==i, arr.ind = TRUE)
print(boite, vp = vplayout(pos[1,1],pos[1,3]))
}
library(grid)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
A <- matrix(6:8, nrow = 1, ncol =3 , byrow = TRUE)
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
for (i in 6:8) {
boite <- ggplot(datos, aes(x = datos[,j] , y= gender)) +
geom_boxplot() +
labs(x ="gender", y = NomColonnes[i]) +
theme_minimal ()
pos <- which(A==i, arr.ind = TRUE)
print(boite, vp = vplayout(pos[1,1],pos[2,2]))
}
library(grid)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
A <- matrix(6:8, nrow = 1, ncol =3 , byrow = TRUE)
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
for (i in 6:8) {
boite <- ggplot(datos, aes(x = datos[,j] , y= gender)) +
geom_boxplot() +
labs(x ="gender", y = NomColonnes[i]) +
theme_minimal ()
pos <- which(A==i, arr.ind = TRUE)
print(boite, vp = vplayout(pos[1,1],pos[0,2]))
}
library(grid)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
A <- matrix(6:8, nrow = 1, ncol =3 , byrow = TRUE)
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
for (i in 6:8) {
boite <- ggplot(datos, aes(x = datos[,j] , y= gender)) +
geom_boxplot() +
labs(x ="gender", y = NomColonnes[i]) +
theme_minimal ()
pos <- which(A==i, arr.ind = TRUE)
print(boite, vp = vplayout(pos[1,1],pos[2,2]))
}
library(GGally)
for (i in 1:5) {
ggpairs(datos, columns = 6:8, ggplot2::aes(colour=datos[i]))
}
library(GGally)
for (i in 1:5) {
ggpairs(datos, columns = 6:8, ggplot2::aes(colour=gender))
}
library(GGally)
ggpairs(datos, columns = 6:8, ggplot2::aes(colour=gender))
}
library(GGally)
for (i in 1:5) {
ggpairs(datos, columns = 6:8, ggplot2::aes(colour=gender))
}
library(GGally)
for (i in 1:5) {
ggpairs(datos, columns = 6:8, ggplot2::aes(colour=datos[i]))
}
library(GGally)
ggpairs(datos, columns = 6:8, ggplot2::aes(colour=gender))
library(GGally)
ggpairs(datos, columns = 6:8, ggplot2::aes(colour=race.ethnicity))
library(GGally)
ggpairs(datos, columns = 6:8, ggplot2::aes(colour=lunch))
datos <-read.csv("StudentsPerformance.csv",dec = ",")
NomColonnes <- c("gender","race ethnicity","parental level of education","lunch","test preparation course","math score","reading score","writing score")
par(mfrow = c(3, 2))
for (i in 1:5) {
tab.eff <- table(datos[,i])
tab.freq <- prop.table(tab.eff)
barplot(tab.freq,xlab=NomColonnes[i],ylab="Fréquence")
}
datos <-read.csv("StudentsPerformance.csv",dec = ",")
NomColonnes <- c("gender","race ethnicity","parental level of education","lunch","test preparation course","math score","reading score","writing score")
par(mfrow = c(3, 3))
for (i in 1:5) {
tab.eff <- table(datos[,i])
tab.freq <- prop.table(tab.eff)
barplot(tab.freq,xlab=NomColonnes[i],ylab="Fréquence")
}
datos <-read.csv("StudentsPerformance.csv",dec = ",")
NomColonnes <- c("gender","race ethnicity","parental level of education","lunch","test preparation course","math score","reading score","writing score")
par(mfrow = c(2, 3))
for (i in 1:5) {
tab.eff <- table(datos[,i])
tab.freq <- prop.table(tab.eff)
barplot(tab.freq,xlab=NomColonnes[i],ylab="Fréquence")
}
Espece <- levels(datos$gender)
for (e in Espece) {
idx <- which(datos$gender==e)
mat.cor <- cor(x = datos[idx,6:8])
corrplot(mat.cor , type = "upper", order = "hclust", tl.col = "black" , tl.srt =45)
}
Espece <- levels(gender)
Espece <- levels(datos$gender)
for (e in Espece) {
idx <- which(datos$gender==e)
mat.cor <- cor(x = datos[idx,6:8])
corrplot(mat.cor , type = "upper", order = "hclust", tl.col = "black" , tl.srt =45)
}
library(ggplot2)
library(GGally)
library(corrplot)
datos <-read.csv("StudentsPerformance.csv",dec = ",")
NomColonnes <- c("gender","race ethnicity","parental level of education","lunch","test preparation course","math score","reading score","writing score")
par(mfrow = c(2, 3))
for (i in 1:5) {
tab.eff <- table(datos[,i])
tab.freq <- prop.table(tab.eff)
barplot(tab.freq,xlab=NomColonnes[i],ylab="Fréquence")
}
par(mfrow = c(2, 2))
for (i in 6:8) {
hist(datos[,i], probability = TRUE, xlab = NomColonnes[i], ylab = "Densité de fréquence",
main = "")
dens <- density(datos[,i])
lines(dens, col = "red", lwd=2)
}
ggpairs(datos, columns = 6:8, ggplot2::aes(colour=gender))
ggpairs(datos, columns = 6:8, ggplot2::aes(colour=race.ethnicity))
ggpairs(datos, columns = 6:8, ggplot2::aes(colour=parental.level.of.education))
ggpairs(datos, columns = 6:8, ggplot2::aes(colour=lunch))
ggpairs(datos, columns = 6:8, ggplot2::aes(colour=test.preparation.course))
Espece <- levels(datos$gender)
for (e in Espece) {
idx <- which(datos$gender==e)
mat.cor <- cor(x = datos[idx,6:8])
corrplot(mat.cor , type = "upper", order = "hclust", tl.col = "black" , tl.srt =45)
}
Espece <- levels(datos$gender)
for (e in Espece) {
idx <- which(datos$gender==e)
mat.cor <- cor(x = datos[idx,6:8])
corrplot(mat.cor , type = "upper", order = "hclust", tl.col = "black" , tl.srt =45)
}
Espece <- levels(datos$gender)
for (e in Espece) {
idx <- which(datos$gender==e)
mat.cor <- cor(x = datos[idx,6:8])
corrplot(mat.cor , type = "upper", order = "hclust", tl.col = "black" , tl.srt =45)
}
Espece <- levels(datos$gender)
for (e in Espece) {
idx <- which(datos$gender==e)
mat.cor <- cor(x = datos[idx,6:8])
corrplot(mat.cor , type = "upper", order = "hclust", tl.col = "black" , tl.srt =45)
}
library(corrplot)
Espece <- levels(iris$Species)
for (e in Espece) {
idx <- which(iris$Species==e)
mat.cor <- cor(x = iris[idx,-5])
corrplot(mat.cor , type = "upper", order = "hclust", tl.col = "black" , tl.srt =45)
}
Espece <- levels(datos$lunch)
for (e in Espece) {
idx <- which(datos$lunch==e)
mat.cor <- cor(x = datos[idx,6:8])
corrplot(mat.cor , type = "upper", order = "hclust", tl.col = "black" , tl.srt =45)
}
mat.cor <- cor(x = datos[idx,6:8])
corrplot(mat.cor , type = "upper", order = "hclust", tl.col = "black" , tl.srt =45)
}
mat.cor <- cor(x = datos[idx,6:8])
corrplot(mat.cor , type = "upper", order = "hclust", tl.col = "black" , tl.srt =45)
mat.cor <- cor(x = datos[idx,6:8])
corrplot(mat.cor , type = "upper", order = "hclust", tl.col = "black" , tl.srt =45)
mat.cor <- cor(x = datos[6:8])
corrplot(mat.cor , type = "upper", order = "hclust", tl.col = "black" , tl.srt =45)
runApp('C:/Users/hp/Desktop/ProR')
library(grid)
library(ggplot2)
grid.newpage()
pushViewport(viewport(layout = grid.layout(1, 3)))
A <- matrix(6:8, nrow = 1, ncol = 3, byrow = TRUE)
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
for (i in 6:8) {
boite <- ggplot(datos, aes(x =datos$gender , y= datos[,i])) +
geom_boxplot() +
labs(x ="Espèces", y = NomColonnes[i]) +
theme_minimal ()
pos <- which(A==i, arr.ind = TRUE)
print(boite, vp = vplayout(pos[1,1],pos[1,2]))
}
library(grid)
library(ggplot2)
grid.newpage()
pushViewport(viewport(layout = grid.layout(1, 3)))
A <- matrix(6:8, nrow = 1, ncol = 3, byrow = TRUE)
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
for (i in 6:8) {
boite <- ggplot(datos, aes(x =datos$race.ethnicity , y= datos[,i])) +
geom_boxplot() +
labs(x ="Race", y = NomColonnes[i]) +
theme_minimal ()
pos <- which(A==i, arr.ind = TRUE)
print(boite, vp = vplayout(pos[1,1],pos[1,2]))
}
library(grid)
library(ggplot2)
grid.newpage()
pushViewport(viewport(layout = grid.layout(1, 3)))
A <- matrix(6:8, nrow = 1, ncol = 3, byrow = TRUE)
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
for (i in 6:8) {
boite <- ggplot(datos, aes(x =datos$parental.level.of.education , y= datos[,i])) +
geom_boxplot() +
labs(x ="niveau d'éducation des parents", y = NomColonnes[i]) +
theme_minimal ()
pos <- which(A==i, arr.ind = TRUE)
print(boite, vp = vplayout(pos[1,1],pos[1,2]))
}
shiny::runApp('C:/Users/hp/Desktop/ProR')
shiny::runApp()
